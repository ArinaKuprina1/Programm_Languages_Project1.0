expr             : IDENTIFIER EQ expr
                 : comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*
                 : lambda-def

comp-expr        : NOT comp-expr
                 : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr       : term ((PLUS|MINUS) term)*

term             : factor ((MUL|DIV) factor)*

factor           : (PLUS|MINUS) factor
                 : call

call             : atom (LPAREN (expr (COMMA expr))? RPAREN)?

atom             : INT|FLOAT|STRING|IDENTIFIER
                 : LPAREN expr RPAREN
                 : if-expr
                 : func-def
                 : lambda-def

if-expr          : KEYWORD:IF expr KEYWORD:THEN expr
                   (KEYWORD:ELIF expr KEYWORD:THEN expr)
                   (KEYWORD:ELSE expr)?

func-def         : KEYWORD:FUN IDENTIFIER?
                   LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                   ARROW expr

lambda-def       : KEYWORD:LAMBD IDENTIFIER DOT expr

if-expr			: KEYWORD:IF expr KEYWORD:THEN expr
							(KEYWORD:ELIF expr KEYWORD:THEN expr)*
							(KEYWORD:ELSE expr)?

func-def		: KEYWORD:FUN IDENTIFIER?
							LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
							ARROW expr